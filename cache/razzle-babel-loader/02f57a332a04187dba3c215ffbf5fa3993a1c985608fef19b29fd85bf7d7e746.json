{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nconst configureStore = preloadedState => {\n  const store = createStore(rootReducer, preloadedState, applyMiddleware(thunk));\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextRootReducer = require('../reducers').default;\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","applyMiddleware","thunk","rootReducer","configureStore","preloadedState","store","module","hot","accept","nextRootReducer","require","default","replaceReducer"],"sources":["F:/work/Nodejs/Git/Razzle/src/common/store/configureStore.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst configureStore = preloadedState => {\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk)\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextRootReducer = require('../reducers').default;\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,aAAa;AAErC,MAAMC,cAAc,GAAGC,cAAc,IAAI;EACvC,MAAMC,KAAK,GAAGN,WAAW,CACvBG,WAAW,EACXE,cAAc,EACdJ,eAAe,CAACC,KAAK,CAAC,CACvB;EAED,IAAIK,MAAM,CAACC,GAAG,EAAE;IACd;IACAD,MAAM,CAACC,GAAG,CAACC,MAAM,CAAC,aAAa,EAAE,MAAM;MACrC,MAAMC,eAAe,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACC,OAAO;MACtDN,KAAK,CAACO,cAAc,CAACH,eAAe,CAAC;IACvC,CAAC,CAAC;EACJ;EAEA,OAAOJ,KAAK;AACd,CAAC;AAED,eAAeF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}