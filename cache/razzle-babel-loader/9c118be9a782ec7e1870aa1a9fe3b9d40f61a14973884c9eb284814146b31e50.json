{"ast":null,"code":"var _jsxFileName = \"F:\\\\work\\\\Nodejs\\\\Git\\\\Razzle\\\\src\\\\server\\\\index.js\";\nvar __jsx = React.createElement;\nimport App from '../common/containers/App';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport configureStore from '../common/store/configureStore';\nimport express from 'express';\nimport { fetchCounter } from '../common/api/counter';\nimport qs from 'qs';\nimport { renderToString } from 'react-dom/server';\nimport serialize from 'serialize-javascript';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : '';\n};\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\"${extra}></script>`).join('') : '' : '';\n};\nexport const renderApp = (req, res) => {\n  return new Promise(resolve => {\n    fetchCounter(apiResult => {\n      // Read the counter from the request, if provided\n      const params = qs.parse(req.query);\n      const counter = parseInt(params.counter, 10) || apiResult || 0;\n\n      // Compile an initial state\n      const preloadedState = {\n        counter\n      };\n\n      // Create a new Redux store instance\n      const store = configureStore(preloadedState);\n\n      // Render the component to a string\n      const markup = renderToString(__jsx(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, __jsx(App, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      })));\n\n      // Grab the initial state from our Redux store\n      const finalState = store.getState();\n      const html =\n      // prettier-ignore\n      `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charSet='utf-8' />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, 'client')}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        <script>\n          window.__PRELOADED_STATE__ = ${serialize(finalState)}\n        </script>\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n    </body>\n  </html>`;\n      resolve({\n        html\n      });\n    });\n  });\n};\nconst server = express();\nserver.disable('x-powered-by').use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get('/*', async (req, res) => {\n  const {\n    html\n  } = await renderApp(req, res);\n  res.send(html);\n});\nexport default server;","map":{"version":3,"names":["App","Provider","React","configureStore","express","fetchCounter","qs","renderToString","serialize","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","renderApp","req","res","Promise","resolve","apiResult","params","parse","query","counter","parseInt","preloadedState","store","markup","finalState","getState","html","server","disable","use","static","RAZZLE_PUBLIC_DIR","get","send"],"sources":["F:/work/Nodejs/Git/Razzle/src/server/index.js"],"sourcesContent":["import App from '../common/containers/App';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport configureStore from '../common/store/configureStore';\nimport express from 'express';\nimport { fetchCounter } from '../common/api/counter';\nimport qs from 'qs';\nimport { renderToString } from 'react-dom/server';\nimport serialize from 'serialize-javascript';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ?\n  assets[entrypoint].css.map(asset=>\n    `<link rel=\"stylesheet\" href=\"${asset}\">`\n  ).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ?\n  assets[entrypoint].js.map(asset=>\n    `<script src=\"${asset}\"${extra}></script>`\n  ).join('') : '' : '';\n};\n\nexport const renderApp = (req, res) => {\n  return new Promise((resolve)=>{\n\n    fetchCounter(apiResult => {\n\n      // Read the counter from the request, if provided\n      const params = qs.parse(req.query);\n      const counter = parseInt(params.counter, 10) || apiResult || 0;\n\n      // Compile an initial state\n      const preloadedState = { counter };\n\n      // Create a new Redux store instance\n      const store = configureStore(preloadedState);\n\n      // Render the component to a string\n      const markup = renderToString(\n        <Provider store={store}>\n          <App />\n        </Provider>\n      );\n\n      // Grab the initial state from our Redux store\n      const finalState = store.getState();\n\n      const html =\n      // prettier-ignore\n      `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charSet='utf-8' />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, 'client')}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        <script>\n          window.__PRELOADED_STATE__ = ${serialize(finalState)}\n        </script>\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n    </body>\n  </html>`;\n\n    resolve({ html });\n    })\n  })\n};\n\nconst server = express();\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', async (req, res) => {\n    const { html } = await renderApp(req, res);\n    res.send(html);\n  });\n\nexport default server;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}