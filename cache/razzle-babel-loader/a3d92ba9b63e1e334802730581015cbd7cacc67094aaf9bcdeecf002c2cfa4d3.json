{"ast":null,"code":"const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min)) + min;\nexport const fetchCounter = callback => {\n  // Rather than immediately returning, we delay our code with a timeout to simulate asynchronous behavior\n  setTimeout(() => {\n    callback(getRandomInt(1, 100));\n  }, 500);\n\n  // In the case of a real world API call, you'll normally run into a Promise like this:\n  // API.getUser().then(user => callback(user))\n};","map":{"version":3,"names":["getRandomInt","min","max","Math","floor","random","fetchCounter","callback","setTimeout"],"sources":["F:/work/Nodejs/Git/Razzle/src/common/api/counter.js"],"sourcesContent":["const getRandomInt = (min, max) =>\n  Math.floor(Math.random() * (max - min)) + min;\n\nexport const fetchCounter = callback => {\n  // Rather than immediately returning, we delay our code with a timeout to simulate asynchronous behavior\n  setTimeout(() => {\n    callback(getRandomInt(1, 100));\n  }, 500);\n\n  // In the case of a real world API call, you'll normally run into a Promise like this:\n  // API.getUser().then(user => callback(user))\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAACC,GAAG,EAAEC,GAAG,KAC5BC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,CAAC,CAAC,GAAGA,GAAG;AAE/C,OAAO,MAAMK,YAAY,GAAGC,QAAQ,IAAI;EACtC;EACAC,UAAU,CAAC,MAAM;IACfD,QAAQ,CAACP,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;EAChC,CAAC,EAAE,GAAG,CAAC;;EAEP;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}